@model MedicineViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    ViewData["Title"] = "Home Page";
}
<div class="row text-center">
    <div class="col-sm-12">
        <div class="text-danger">
            @TempData["ErrorMessage"]
        </div>
        <div class="text-success">
            @TempData["SuccessMessage"]
        </div>
    </div>
</div>
<br />
<div class="row justify-content-center">
    <div class="col-sm-4 border">
        <div class="text-center">
            <h4>Add Medicine</h4>
        </div>
        <form method="post">
            <div class="form-group">
                <input type="hidden" asp-for="Id" />
                <label asp-for="Brand"></label>
                <input type="text" class="form-control" asp-for="Brand">
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price"></label>
                <input type="number" class="form-control" asp-for="Price">
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity"></label>
                <input type="number" class="form-control" asp-for="Quantity">
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpiryDate"></label>
                <input type="date" class="form-control" asp-for="ExpiryDate">
                <span asp-validation-for="ExpiryDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes"></label>
                <textarea type="text" class="form-control" asp-for="Notes"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group text-center">
                <button type="submit" class="btn btn-primary">Add</button>
            </div>

        </form>
    </div>
</div>
<br />
<br />
<div class="row">
    <div class="col-sm-12">
        <table id="medicineDataTable" class="table table-striped table-bordered"></table>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let medicineUrl = '@Url.Action(action: "Medicine", controller:"Home")';
        let baseUrl = '@Configuration["APISettings:BaseUrl"]';
        let dateAfter30DaysNumber = new Date().setDate(new Date().getDate() + 30);
        dateAfter30DaysNumber = new Date(dateAfter30DaysNumber).setHours(0, 0, 0, 0);
        $(function () {
            let medicineDataTable = {
                dt: null,

                init: function () {
                    this.dt = $('#medicineDataTable').DataTable({
                        serverSide: true,
                        processing: true,
                        responsive: true,
                        iDisplayLength: 10,
                        dom: "<'row p-0'<'col-sm-4'B><'col-sm-4'l><'col-sm-4'f>>rtip",
                        buttons: [
                            'copyHtml5',
                            'excelHtml5',
                            'csvHtml5',
                            {
                                extend: 'pdfHtml5',
                                orientation: 'landscape',
                                pageSize: 'LEGAL'
                            },
                            'print'
                        ],
                        ajax: {
                            url: baseUrl+"medicines",
                            dataType: "json",
                            type: "POST",
                            async: "true",
                            global: false
                        },
                        language: {
                            searchPlaceholder: "Brand"
                        },
                        columns: [
                            { title: "Id", data: "id", searchable: false, className: "d-none" },
                            { title: "Brand", data: "brand", searchable: true },
                            { title: "Price", data: "price", searchable: false },
                            {
                                title: "Quantity",
                                data: "quantity",
                                searchable: false,
                                createdCell: function (td, cellData, rowData, row, col) {
                                    if (Number(cellData) < 10) {
                                        $(td).addClass('bg-warning');
                                    }
                                }
                            },
                            {
                                title: "ExpiryDate", data: "expiryDate", searchable: false, createdCell: function (td, cellData, rowData, row, col) {
                                    if (Date.parse(cellData) < dateAfter30DaysNumber) {
                                        $(td).addClass('bg-danger');
                                    }
                                }
                            },
                            { title: "Notes", data: "notes", searchable: false },
                            {
                                title: "Action",
                                data: null,
                                className: 'tdAction',
                                render: function (data, type, row) {
                                    let actionRowButtons = '';
                                    actionRowButtons += '<a href="' + medicineUrl + '?id=' + data['id'] + '" target="_blank" class="btn btn-primary m-1">Show</a>';
                                    actionRowButtons += '<button class="btn btn-primary m-1 deleteMedicine" data-id="' + data["id"] + '">Delete</button>';
                                    return actionRowButtons;
                                }
                            }
                        ]
                    })
                }
            }
            medicineDataTable.init();

            $(document).on('click', '.deleteMedicine', function () {
                let id = $(this).data('id');
                $.post('/Home/DeleteMedicine', { id }, function (res) {
                    medicineDataTable.dt.ajax.reload(null, false);
                    if (res) {
                        alert(res);
                    }
                });
            });

        });
    </script>
}
